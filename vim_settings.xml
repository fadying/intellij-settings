<application>
  <component name="VimSettings">
    <state version="4" enabled="false" />
    <globalmarks />
    <filemarks>
      <file name="/a.dummy" timestamp="1493211173701">
        <mark key="[" line="0" column="3" />
        <mark key="]" line="0" column="3" />
        <mark key="." line="0" column="3" />
      </file>
      <file name="/CommonStringPool.java" timestamp="1493192869490" />
      <file name="/CacheExtendDictionaryTempIndex.cs" timestamp="1493275236049" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/IsQuicklyConfirmFilter.java" timestamp="1493276522830">
        <mark key="[" line="40" column="0" />
        <mark key="]" line="40" column="0" />
        <mark key="." line="40" column="0" />
      </file>
      <file name="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/lang/String.java" timestamp="1493197091580" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Caches/Base/CacheData/CacheExtendDictionaryTempIndex.cs" timestamp="1493276121009" />
      <file name="/SearchHotelDataFacade.cs" timestamp="1493275365593" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Solution/Hotel.Product.SearchService.CommonCore/Config/SearchConfig.cs" timestamp="1493278881570" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-configuration/src/main/java/com/ctrip/hotel/search/conf/annotations/Conf.java" timestamp="1493278043757" />
      <file name="/AllHotelIdEntity.java" timestamp="1493199177194" />
      <file name="$MAVEN_REPOSITORY$/org/springframework/spring-context/4.3.7.RELEASE/spring-context-4.3.7.RELEASE-sources.jar!/org/springframework/scheduling/concurrent/ForkJoinPoolFactoryBean.java" timestamp="1493201913513" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-configuration/src/main/java/com/ctrip/hotel/search/conf/config/SearchConfig.java" timestamp="1493279644211">
        <mark key="[" line="4975" column="0" />
        <mark key="]" line="4975" column="0" />
        <mark key="." line="4975" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-configuration/src/main/java/com/ctrip/hotel/search/conf/config/SearchConfigShard.java" timestamp="1493278488563" />
      <file name="/SearchConfig.cs" timestamp="1493277284299" />
      <file name="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/ForkJoinWorkerThread.java" timestamp="1493202485717" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Business/SearchFactory/DynamicSearch/RoomFilterRules/CorpMemberSpecialInvoiceFilter.cs" timestamp="1493276839666" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Business/CheckSearchRequest.cs" timestamp="1493275492430" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-webservice/src/test/java/com/ctrip/hotel/search/common/parallels/ParallelsTest.java" timestamp="1493196137223">
        <mark key="[" line="35" column="50" />
        <mark key="]" line="35" column="51" />
        <mark key="." line="35" column="51" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/IsPromoteRoomTypeFilter.java" timestamp="1493276506683">
        <mark key="[" line="96" column="0" />
        <mark key="]" line="96" column="0" />
        <mark key="." line="96" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/IsCanReserveFilter.java" timestamp="1493276477115">
        <mark key="[" line="31" column="0" />
        <mark key="]" line="31" column="0" />
        <mark key="." line="31" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-caches/src/main/java/com/ctrip/hotel/search/caches/base/CacheExtendDictionaryIndex.java" timestamp="1493274979095">
        <mark key="[" line="90" column="5" />
        <mark key="]" line="97" column="41" />
        <mark key="^" line="97" column="41" />
        <mark key="." line="97" column="41" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/CorpMemberSpecialInvoiceFilter.java" timestamp="1493276885759">
        <mark key="[" line="46" column="21" />
        <mark key="]" line="46" column="21" />
        <mark key="." line="46" column="21" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Caches/Base/CacheData/CacheExtendDictionaryIndex.cs" timestamp="1493276078502" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Caches/RedisCaches/LadderDeductionRoomDataBusinessV3.cs" timestamp="1493277351591" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/IsJustifyConfirmFilter.java" timestamp="1493276491547">
        <mark key="[" line="35" column="0" />
        <mark key="]" line="35" column="0" />
        <mark key="." line="35" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/CacheJob/Business/Caches/LadderDeductionRoomDataBusinessV2.cs" timestamp="1493277071052" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/fw/ProcessAutomaticUtil.java" timestamp="1493276605062" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Common/Config/SearchConfig.cs" timestamp="1493275569040" />
      <file name="/StringCommonUtils.java" timestamp="1493192958748" />
      <file name="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/ForkJoinPool.java" timestamp="1493195762477" />
      <file name="$USER_HOME$/IdeaProjects/qunar/open-coupon/coupon-provider/src/main/java/com/qunar/hotel/qta/coupon/provider/service/facade/FacadeService.java" timestamp="1493189975425" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-configuration/src/main/java/com/ctrip/hotel/search/conf/builder/ConfigBuilder.java" timestamp="1493277788032" />
      <file name="$USER_HOME$/IdeaProjects/qunar/open-coupon/coupon-biz/src/main/java/com/qunar/hotel/qta/coupon/biz/adaptor/httpapi/HttpApiAdaptor.java" timestamp="1493191234167" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/SearchServer/SearchServer/Caches/Base/BuildMethods/RefreshFromRedisMethod.cs" timestamp="1493274423214" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-core/src/main/java/com/ctrip/hotel/search/core/util/CommonStringPool.java" timestamp="1493193208862" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/BreakFastFilter.java" timestamp="1493276444075">
        <mark key="[" line="37" column="0" />
        <mark key="]" line="37" column="0" />
        <mark key="." line="37" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/common/ParallelContext.java" timestamp="1493204463984" />
      <file name="/Dummy.txt" timestamp="1493271984527">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="25" />
        <mark key="." line="0" column="10" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/SearchHotelDataFacade.java" timestamp="1493276573520">
        <mark key="[" line="169" column="35" />
        <mark key="]" line="169" column="35" />
        <mark key="^" line="169" column="35" />
        <mark key="." line="169" column="35" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/BreakFastNumFilter.java" timestamp="1493276452361">
        <mark key="[" line="46" column="0" />
        <mark key="]" line="46" column="0" />
        <mark key="." line="46" column="0" />
      </file>
      <file name="/LadderDeductionRoomDataBusinessV3.cs" timestamp="1493277356134" />
      <file name="/CacheExtendDictionaryIndex.cs" timestamp="1493274980583" />
      <file name="/pom.xml" timestamp="1493199212051" />
      <file name="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist_pos/HotelDataSelectLazyProcessPos.java" timestamp="1493204172251" />
    </filemarks>
    <jumps>
      <jump line="28" column="62" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectUtil.java" />
      <jump line="36" column="18" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-internalentity/src/main/java/com/ctrip/hotel/search/internalentity/common/Lists.java" />
      <jump line="0" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/ArrayList.java" />
      <jump line="63" column="21" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/filter/FilterHotelKeyword.java" />
      <jump line="146" column="96" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist_pos/MasterHotelFilterPos.java" />
      <jump line="102" column="13" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/optional/HotelOptionalBusinessServiceImplV4.java" />
      <jump line="207" column="42" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/MasterHotelFilter.java" />
      <jump line="39" column="61" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectUtil.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/filter/FilterHotelKeywordUtil.java" />
      <jump line="259" column="11" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectLazyProcess.java" />
      <jump line="257" column="4" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectLazyProcess.java" />
      <jump line="250" column="12" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectLazyProcess.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/fw/ProcessRouteUtil.java" />
      <jump line="25" column="30" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/common/Parallels.java" />
      <jump line="14" column="7" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/common/Parallels.java" />
      <jump line="20" column="33" filename="$USER_HOME$/IdeaProjects/test/test/web/src/test/java/com/ouyangsheng/test/web/util/StreamTest.java" />
      <jump line="0" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/atomic/LongAdder.java" />
      <jump line="81" column="20" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="71" column="20" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="106" column="0" filename="$USER_HOME$/IdeaProjects/test/test/web/src/test/java/com/ouyangsheng/test/web/jmh/HelloWorld.java" />
      <jump line="55" column="41" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="99" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="132" column="42" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="57" column="53" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/atomic/AtomicInteger.java" />
      <jump line="14" column="26" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-core/src/main/java/com/ctrip/hotel/search/core/toolutils/ThreadPools.java" />
      <jump line="0" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/ThreadPoolExecutor.java" />
      <jump line="15" column="18" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-core/src/main/java/com/ctrip/hotel/search/core/toolutils/NamedThreadFactory.java" />
      <jump line="19" column="11" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-core/src/main/java/com/ctrip/hotel/search/core/toolutils/NamedThreadFactory.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-core/src/main/java/com/ctrip/hotel/search/core/toolutils/NamedThreadFactory.java" />
      <jump line="8" column="18" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-core/src/main/java/com/ctrip/hotel/search/core/toolutils/NamedThreadFactory.java" />
      <jump line="15" column="16" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-core/src/main/java/com/ctrip/hotel/search/core/toolutils/ThreadPools.java" />
      <jump line="68" column="25" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/statics/DeadLineTimeInfoBase.java" />
      <jump line="37" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="208" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="117" column="8" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="116" column="8" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="113" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="120" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="97" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="41" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="220" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="167" column="5" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="3" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="115" column="30" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="0" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/atomic/AtomicInteger.java" />
      <jump line="160" column="35" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="99" column="12" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/atomic/AtomicInteger.java" />
      <jump line="161" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="159" column="40" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="132" column="51" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/atomic/AtomicInteger.java" />
      <jump line="55" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/atomic/AtomicInteger.java" />
      <jump line="80" column="76" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="995" column="19" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/ArrayList.java" />
      <jump line="1002" column="19" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/ArrayList.java" />
      <jump line="58" column="53" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="0" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/Objects.java" />
      <jump line="70" column="103" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="136" column="46" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="127" column="4" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="47" column="40" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-webservice/src/test/java/com/ctrip/hotel/search/common/parallels/ParallelsTest.java" />
      <jump line="29" column="47" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-webservice/src/test/java/com/ctrip/hotel/search/common/parallels/ParallelsTest.java" />
      <jump line="54" column="47" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-webservice/src/test/java/com/ctrip/hotel/search/common/parallels/ParallelsTest.java" />
      <jump line="0" column="0" filename="$MAVEN_REPOSITORY$/com/google/guava/guava/19.0/guava-19.0-sources.jar!/com/google/common/base/MoreObjects.java" />
      <jump line="31" column="66" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-webservice/src/test/java/com/ctrip/hotel/search/common/parallels/ParallelsTest.java" />
      <jump line="69" column="15" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="66" column="33" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-webservice/src/test/java/com/ctrip/hotel/search/common/parallels/ParallelsTest.java" />
      <jump line="242" column="57" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="49" column="72" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-webservice/src/test/java/com/ctrip/hotel/search/common/parallels/ParallelsTest.java" />
      <jump line="202" column="64" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="1593" column="40" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/Arrays.java" />
      <jump line="222" column="17" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="0" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/ForkJoinPool.java" />
      <jump line="2504" column="26" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/ForkJoinPool.java" />
      <jump line="1254" column="32" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/concurrent/ForkJoinPool.java" />
      <jump line="147" column="25" filename="$MAVEN_REPOSITORY$/com/ctriposs/baiji/baiji-rpc-server/2.4.2/baiji-rpc-server-2.4.2-sources.jar!/com/ctriposs/baiji/rpc/server/configuration/policy/source/PolicyServiceConfiguration.java" />
      <jump line="185" column="71" filename="$MAVEN_REPOSITORY$/com/ctriposs/baiji/baiji-rpc-server/2.4.2/baiji-rpc-server-2.4.2-sources.jar!/com/ctriposs/baiji/rpc/server/configuration/policy/source/PolicyServiceConfiguration.java" />
      <jump line="36" column="22" filename="$MAVEN_REPOSITORY$/com/ctriposs/baiji/baiji-rpc-server/2.4.2/baiji-rpc-server-2.4.2-sources.jar!/com/ctriposs/baiji/rpc/server/configuration/policy/source/PolicyServiceClient.java" />
      <jump line="174" column="36" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectLazyProcess.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectUtil.java" />
      <jump line="173" column="22" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectLazyProcess.java" />
      <jump line="170" column="25" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/hotellist/HotelDataSelectLazyProcess.java" />
      <jump line="0" column="0" filename="C:/Program Files/Java/jdk1.8.0_121/src.zip!/java/util/stream/Stream.java" />
      <jump line="141" column="90" filename="$USER_HOME$/IdeaProjects/qunar/open-coupon/coupon-biz/src/main/java/com/qunar/hotel/qta/coupon/biz/manager/coupon/CouponManagerImpl.java" />
      <jump line="35" column="29" filename="$USER_HOME$/IdeaProjects/qunar/open-coupon/coupon-biz/src/main/java/com/qunar/hotel/qta/coupon/biz/manager/sync/CouponCounter.java" />
      <jump line="114" column="14" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/lazy/RouteProcessCore.java" />
      <jump line="117" column="71" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/lazy/RouteProcessCore.java" />
      <jump line="273" column="31" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="42" column="45" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="126" column="41" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/lazy/RouteProcessCore.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-internalentity/src/main/java/com/ctrip/hotel/search/internalentity/common/HotelDataIndex.java" />
      <jump line="112" column="50" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/lazy/RouteProcessCore.java" />
      <jump line="96" column="12" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-common/src/main/java/com/ctrip/hotel/search/common/parallels/Parallels.java" />
      <jump line="174" column="33" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-caches/src/main/java/com/ctrip/hotel/search/caches/base/buildmethods/RefreshFromRedisMethod.java" />
      <jump line="0" column="0" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-caches/src/main/java/com/ctrip/hotel/search/caches/base/CacheBase.java" />
      <jump line="177" column="13" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-caches/src/main/java/com/ctrip/hotel/search/caches/base/buildmethods/RefreshFromRedisMethod.java" />
      <jump line="154" column="78" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-caches/src/main/java/com/ctrip/hotel/search/caches/base/buildmethods/RefreshFromRedisMethod.java" />
      <jump line="38" column="20" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/BreakFastFilter.java" />
      <jump line="43" column="20" filename="$USER_HOME$/IdeaProjects/ctrip/HotelSearchService/hotel-product-search-business/src/main/java/com/ctrip/hotel/search/biz/factory/dynamic/roomfilterrules/BreakFastFilter.java" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text />
      </register>
      <register name="-" type="4">
        <text />
      </register>
      <register name="/" type="4">
        <text>(TSource|TResult)</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgZm9yIChpbnQgbnVtYmVyT2ZEb25lID0gMDsgaWR4IDwgc291cmNlLnNpemUoKSAmJiBudW1iZXJPZkRvbmUgPD0gbWF0Y2hlZENvdW50TGltaXQ7IGlkeCsrKSB7Cg==</text>
      </register>
      <register name="1" type="4">
        <text encoding="base64">CgoKICAgIHB1YmxpYyB2b2lkIHNldElzRW5hYmxlSG90ZWxPcHRpb25hbFhUaWNrZXRzU2VydmljZUJ1c2luZXNzQ2FjaGVCdWlsZCgKICAgICAgICAgICAgYm9vbGVhbiBpc0VuYWJsZUhvdGVsT3B0aW9uYWxYVGlja2V0c1NlcnZpY2VCdXNpbmVzc0NhY2hlQnVpbGQpIHsKICAgICAgICB0aGlzLmlzRW5hYmxlSG90ZWxPcHRpb25hbFhUaWNrZXRzU2VydmljZUJ1c2luZXNzQ2FjaGVCdWlsZCA9CiAgICAgICAgICAgICAgICBpc0VuYWJsZUhvdGVsT3B0aW9uYWxYVGlja2V0c1NlcnZpY2VCdXNpbmVzc0NhY2hlQnVpbGQ7CiAgICB9Cgo=</text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="4">
        <text encoding="base64">CiAgICBwdWJsaWMgSGFzaFNldDxTdHJpbmc+IGZpeE9yZGVyTmFtZSgpIHsKICAgICAgICByZXR1cm4gZml4T3JkZXJOYW1lOwogICAgfQ==</text>
      </register>
      <register name="3" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="4" type="4">
        <text encoding="base64">ICBwdWJsaWMgdm9pZCBzZXRFbmFibGVFbmZvcmNlRmlsdGVyUm9vbUZvckxhenlJbkR5Myhib29sZWFuIGVuYWJsZUVuZm9yY2VGaWx0ZXJSb29tRm9yTGF6eUluRHkzKSB7CiAgICAgICAgdGhpcy5lbmFibGVFbmZvcmNlRmlsdGVyUm9vbUZvckxhenlJbkR5MyA9IGVuYWJsZUVuZm9yY2VGaWx0ZXJSb29tRm9yTGF6eUluRHkzOwogICAgfQ==</text>
      </register>
      <register name="5" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="6" type="4">
        <text encoding="base64">CiAgICBwdWJsaWMgYm9vbGVhbiBpc0VuYWJsZVNob3dIb3RlbE5vUm9vbUluUGFyYWxsZWxFeGVjKCkgewogICAgICAgIHJldHVybiBlbmFibGVTaG93SG90ZWxOb1Jvb21JblBhcmFsbGVsRXhlYzsKICAgIH0KCiAgICBwdWJsaWMgYm9vbGVhbiBpc0FkZEVTTG9nSW5mbygpIHsKICAgICAgICByZXR1cm4gYWRkRVNMb2dJbmZvOwogICAgfQoKICAgIHB1YmxpYyBib29sZWFuIGlzRW5hYmxlT3JnUGF5VHlwZSgpIHsKICAgICAgICByZXR1cm4gZW5hYmxlT3JnUGF5VHlwZTsKICAgIH0KCiAgICBwdWJsaWMgYm9vbGVhbiBpc0VuYWJsZUR5M1JlZmFjdG9yRm9yQ2FjaGUoKSB7CiAgICAgICAgcmV0dXJuIEVuYWJsZUR5M1JlZmFjdG9yRm9yQ2FjaGU7CiAgICB9CgogICAgcHVibGljIGJvb2xlYW4gaXNDYWxsUGljdHVyZUluZm9EYXNoQm9hcmQoKSB7CiAgICAgICAgcmV0dXJuIENhbGxQaWN0dXJlSW5mb0Rhc2hCb2FyZDsKICAgIH0=</text>
      </register>
      <register name="7" type="4">
        <text encoding="base64">CiAgICBwdWJsaWMgYm9vbGVhbiBpc0VuYWJsZUxpc3RDYWNoZUZvclN1cHBsaWVySW5mbygpIHsKICAgICAgICByZXR1cm4gZW5hYmxlTGlzdENhY2hlRm9yU3VwcGxpZXJJbmZvOwogICAgfQoKICAgIHB1YmxpYyBib29sZWFuIGlzRW5hYmxlUmVhZENhY2hlUG9zaXRpb25Gcm9tTXVsdGlQYWNrcygpIHsKICAgICAgICByZXR1cm4gZW5hYmxlUmVhZENhY2hlUG9zaXRpb25Gcm9tTXVsdGlQYWNrczsKICAgIH0KCiAgICBwdWJsaWMgYm9vbGVhbiBpc0FsbG93TGF6eU1vZGVTdXBwb3J0SG90ZWxMaXN0QW5kTWFwKCkgewogICAgICAgIHJldHVybiBhbGxvd0xhenlNb2RlU3VwcG9ydEhvdGVsTGlzdEFuZE1hcDsKICAgIH0KCiAgICBwdWJsaWMgYm9vbGVhbiBpc0J1aWxkSG90ZWxCYXNlQnJhbmRCdXNpbmVzcygpIHsKICAgICAgICByZXR1cm4gaXNCdWlsZEhvdGVsQmFzZUJyYW5kQnVzaW5lc3M7CiAgICB9CgogICAgcHVibGljIGJvb2xlYW4gaXNFbmFibGVIb3RlbEJhc2VCcmFuZEJ1c2luZXNzKCkgewogICAgICAgIHJldHVybiBlbmFibGVIb3RlbEJhc2VCcmFuZEJ1c2luZXNzOwogICAgfQoKICAgIHB1YmxpYyBib29sZWFuIGlzQnVpbGRIb3RlbEdyYWRlUmFua0J1c2luZXNzKCkgewogICAgICAgIHJldHVybiBpc0J1aWxkSG90ZWxHcmFkZVJhbmtCdXNpbmVzczsKICAgIH0KCiAgICBwdWJsaWMgYm9vbGVhbiBpc0VuYWJsZUhvdGVsR3JhZGVSYW5rQnVzaW5lc3MoKSB7CiAgICAgICAgcmV0dXJuIGVuYWJsZUhvdGVsR3JhZGVSYW5rQnVzaW5lc3M7CiAgICB9CgogICAgcHVibGljIGJvb2xlYW4gaXNFbmFibGVWZW5kb3JMaXN0Q29udGFpblplcm8oKSB7CiAgICAgICAgcmV0dXJuIGVuYWJsZVZlbmRvckxpc3RDb250YWluWmVybzsKICAgIH0KCiAgICBwdWJsaWMgYm9vbGVhbiBpc09wZW5UaWNrZXRHaWZ0U2luZ2xlQ2hhbm5lbExvZ2ljKCkgewogICAgICAgIHJldHVybiBpc09wZW5UaWNrZXRHaWZ0U2luZ2xlQ2hhbm5lbExvZ2ljOwogICAgfQoKICAgIHB1YmxpYyBIYXNoU2V0PEludGVnZXI+IGdldFRpY2tldEdpZnRSdWxlU2VhcmNoVHlwZSgpIHsKICAgICAgICByZXR1cm4gVGlja2V0R2lmdFJ1bGVTZWFyY2hUeXBlOwogICAgfQoKICAgIHB1YmxpYyBib29sZWFuIGlzRW5hYmxlUm9vbVRpY2tldEFtb3VudEN1cnJlbmN5RXhjaGFuZ2UoKSB7CiAgICAgICAgcmV0dXJuIGVuYWJsZVJvb21UaWNrZXRBbW91bnRDdXJyZW5jeUV4Y2hhbmdlOwogICAgfQoKICAgIHB1YmxpYyBIYXNoU2V0PFN0cmluZz4gZ2V0QWxsb3dQYXJhbGxlbFRhc2tIaWdoTGV2ZWxBcHBpZCgpIHsKICAgICAgICByZXR1cm4gQWxsb3dQYXJhbGxlbFRhc2tIaWdoTGV2ZWxBcHBpZDsKICAgIH0KCiAgICBwdWJsaWMgSGFzaFNldDxTdHJpbmc+IGdldEFsbG93UGFyYWxsZWxUYXNrTG93TGV2ZWxBcHBpZCgpIHsKICAgICAgICByZXR1cm4gYWxsb3dQYXJhbGxlbFRhc2tMb3dMZXZlbEFwcGlkOwogICAgfQoKICAgIHB1YmxpYyBIYXNoU2V0PFN0cmluZz4gZ2V0V2hpdGVMaXN0Rm9yUGljT3V0UHV0KCkgewogICAgICAgIHJldHVybiB3aGl0ZUxpc3RGb3JQaWNPdXRQdXQ7CiAgICB9CgogICAgcHVibGljIGJvb2xlYW4gaXNFbmFibGVPdXRwdXRIb3RlbElkTGlzdCgpIHsKICAgICAgICByZXR1cm4gZW5hYmxlT3V0cHV0SG90ZWxJZExpc3Q7CiAgICB9</text>
      </register>
      <register name="8" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="9" type="4">
        <text>public boolean isAllowLazyModePayTypeFilter() {
        return allowLazyModePayTypeFilter;
    }

    public boolean isAllowLazyModeSkipSort() {
        return allowLazyModeSkipSort;
    }

    public boolean isAllowLazyModeUseByteArrayCompressRedisIO() {
        return allowLazyModeUseByteArrayCompressRedisIO;
    }

    public boolean isAccessRedisUseAsync() {
        return accessRedisUseAsync;
    }

    public boolean isEnableLikeSearchForConfig() {
        return enableLikeSearchForConfig;
    }</text>
      </register>
      <register name=":" type="4">
        <text encoding="base64">JzwsJz5zLyhUU291cmNlfFRSZXN1bHQpL1RJdGVtL2c=</text>
      </register>
    </registers>
    <search>
      <last-search>(TSource|TResult)</last-search>
      <last-offset />
      <last-pattern>(TSource|TResult)</last-pattern>
      <last-replace>TItem</last-replace>
      <last-substitute>(TSource|TResult)</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDxDYWNoZVR5cGVFbnVtXD4=</entry>
        <entry encoding="base64">XDxjYWNoZVR5cGVcPg==</entry>
        <entry>todo</entry>
        <entry>缓存</entry>
        <entry encoding="base64">XDw7XD4=</entry>
        <entry encoding="base64">XDxsYXN0RnVsbFJlZnJlc2hTdGFydFRpbWVcPg==</entry>
        <entry>cache</entry>
        <entry encoding="base64">XDxmdWxsUmVmcmVzaFw+</entry>
        <entry encoding="base64">XDxzdGF0dXNcPg==</entry>
        <entry encoding="base64">XDxpbmNSZWZyZXNoXD4=</entry>
        <entry>widh</entry>
        <entry>int</entry>
        <entry>static</entry>
        <entry>map</entry>
        <entry>sheng.test</entry>
        <entry>sheng.web</entry>
        <entry>TSource|TResult</entry>
        <entry>(TSource|TResult)</entry>
      </history-search>
      <history-cmd>
        <entry>reg</entry>
        <entry>tabs</entry>
        <entry>bp</entry>
        <entry>bn</entry>
        <entry>n</entry>
        <entry>e</entry>
        <entry>set highlight</entry>
        <entry>s/int/Integer</entry>
        <entry encoding="base64">JzwsJz5zL21hcC9fc2V0dGVyTWFwLw==</entry>
        <entry>s/sheng.test/sheng.test.web/</entry>
        <entry>s/sheng.web/sheng.test.web/</entry>
        <entry encoding="base64">JzwsJz5zL1RTb3VyY2V8VFJlc3VsdC9USXRlbS9n</entry>
        <entry encoding="base64">JzwsJz5zLyhUU291cmNlfFRSZXN1bHQpL1RJdGVtL2c=</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>